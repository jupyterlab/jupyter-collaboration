[build-system]
build-backend = "hatchling.build"
requires = ["hatchling>=1.4.0", "hatch-nodejs-version", "jupyterlab>=4.0.0a32"]

[project]
name = "jupyter_collaboration"
readme = "README.md"
license = { file = "LICENSE" }
requires-python = ">=3.8"
classifiers = [
    "Intended Audience :: Developers",
    "Intended Audience :: System Administrators",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: BSD License",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Framework :: Jupyter",
    "Framework :: Jupyter :: JupyterLab",
    "Framework :: Jupyter :: JupyterLab :: 4",
    "Framework :: Jupyter :: JupyterLab :: Extensions",
    "Framework :: Jupyter :: JupyterLab :: Extensions :: Prebuilt",
]
dependencies = [
    "jupyter_server>=2.0.0,<3.0.0",
    "jupyter_ydoc>=0.3.0,<0.4.0",
    "ypy-websocket>=0.8.2,<0.9.0",
    "jupyter_server_fileid>=0.6.0,<1"
]
dynamic = ["version", "description", "authors", "urls", "keywords"]

[project.optional-dependencies]
dev = [
    "click",
    "pre-commit",
    "jupyter_releaser"
]
test = [
    "coverage",
    "jupyter_server[test]>=2.0.0",
    "pytest>=7.0",
    "pytest-cov",
]
docs = [
    "jupyterlab>=4.0.0a32",
    "sphinx",
    "myst-parser",
    "pydata-sphinx-theme"
]

[tool.black]
line-length = 100

[tool.isort]
profile = "black"

[tool.hatch.version]
source = "nodejs"

[tool.hatch.build.hooks.version]
path = "jupyter_collaboration/_version.py"

[tool.hatch.metadata.hooks.nodejs]
fields = ["description", "authors", "urls"]

[tool.hatch.build.targets.sdist]
artifacts = ["/jupyter_collaboration/labextension"]
exclude = ["/.github", "/binder", "node_modules"]

[tool.hatch.build.targets.sdist.force-include]
"./packages" = "packages"

[tool.hatch.build.targets.wheel.shared-data]
"jupyter_collaboration/labextension" = "share/jupyter/labextensions/@jupyter/collaboration-extension"
"install.json" = "share/jupyter/labextensions/@jupyter/collaboration-extension/install.json"
"jupyter-config/jupyter_collaboration.json" = "etc/jupyter/jupyter_server_config.d/jupyter_collaboration.json"

[tool.hatch.build.hooks.jupyter-builder]
dependencies = ["hatch-jupyter-builder>=0.5"]
build-function = "hatch_jupyter_builder.npm_builder"
ensured-targets = [
    "jupyter_collaboration/labextension/static/style.js",
    "jupyter_collaboration/labextension/package.json",
]
skip-if-exists = ["jupyter_collaboration/labextension/static/style.js"]

[tool.hatch.build.hooks.jupyter-builder.build-kwargs]
npm = ["jlpm"]
build_cmd = "build:prod"
editable_build_cmd = "install:extension"

[tool.jupyter-releaser]
skip = ["check-links"]

[tool.jupyter-releaser.options]
npm-cmd = "npm publish --tag next"
version-cmd = "python scripts/bump_version.py --force"

[tool.jupyter-releaser.hooks]
before-build-npm = [
    "jlpm build:prod"
]
before-build-python = [
    "jlpm clean:all",
    # Build the assets
    "jlpm build:prod",
    # Clean the build artifacts to not include them in sdist
    "jlpm clean:lib"
]
before-bump-version = [
    "python -m pip install --pre -U jupyterlab",
    "jlpm"
]

[tool.check-wheel-contents]
ignore = ["W002"]

[tool.pytest.ini_options]
addopts = "-raXs --durations 10 --color=yes --doctest-modules"
testpaths = ["tests/"]
timeout = 300
# Restore this setting to debug failures
# timeout_method = "thread"
filterwarnings = [
    "error",
    # From tornado
    "ignore:unclosed <socket.socket:ResourceWarning",
    "module:make_current is deprecated:DeprecationWarning",
    "module:clear_current is deprecated:DeprecationWarning",
    "module:There is no current event loop:DeprecationWarning",
    #
    "module:Jupyter is migrating its paths to use standard platformdirs:DeprecationWarning",
    # In PyPy/Cython: see https://github.com/yaml/pyyaml/issues/688
    "ignore:can't resolve package from __spec__ or __package__, falling back on __name__ and __path__:ImportWarning",
]

[tool.mypy]
check_untyped_defs = true
disallow_any_generics = true
disallow_incomplete_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
no_implicit_reexport = true
pretty = true
show_error_context = true
show_error_codes = true
strict_equality = true
strict_optional = true
warn_unused_configs = true
warn_redundant_casts = true
warn_return_any = true
warn_unused_ignores = true
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = [
    "traitlets.*",
    "jupyter_server.*",
    "terminado"
]
ignore_missing_imports = true
